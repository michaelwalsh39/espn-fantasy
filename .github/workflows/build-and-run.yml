name: Build and Run Java App

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Download Oracle JARs from GitHub Release
        run: |
          mkdir -p jars
          gh release download --pattern "*.jar" --dir jars
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Oracle JARs to local Maven repo
        run: |
          for jar in jars/*.jar; do
            base=$(basename "$jar")
            case $base in
              ojdbc11*)
                mvn install:install-file -Dfile="$jar" -DgroupId=com.oracle.database.jdbc -DartifactId=ojdbc11 -Dversion=21.9.0.0 -Dpackaging=jar
                ;;
              oraclepki*)
                mvn install:install-file -Dfile="$jar" -DgroupId=com.oracle.ojdbc -DartifactId=oraclepki -Dversion=23.3.0.0 -Dpackaging=jar
                ;;
              osdt_cert*)
                mvn install:install-file -Dfile="$jar" -DgroupId=com.oracle.ojdbc -DartifactId=osdt_cert -Dversion=23.3.0.0 -Dpackaging=jar
                ;;
              osdt_core*)
                mvn install:install-file -Dfile="$jar" -DgroupId=com.oracle.ojdbc -DartifactId=osdt_core -Dversion=23.3.0.0 -Dpackaging=jar
                ;;
            esac
          done

      - name: Restore Oracle wallet
        run: |
          echo "${{ secrets.ORACLE_WALLET_BASE64 }}" | base64 -d > wallet.zip

      - name: Check wallet.zip
        run: |
          ls -l wallet.zip
          file wallet.zip

      - name: Unzip wallet.zip
        run: |
          unzip -v wallet.zip
          unzip wallet.zip -d wallet
          ls -la wallet

      - name: Debug wallet contents
        run: |
          echo "Wallet directory contents:"
          ls -l wallet
          echo "Contents of tnsnames.ora:"
          cat wallet/tnsnames.ora

      - name: Create config.properties
        run: |
          echo "${{ secrets.CONFIG_PROPERTIES }}" > config.properties

      - name: Build with Maven
        run: mvn clean package -DskipTests -Dmaven.javadoc.skip=true -B -V

      - name: Run the application
        env:
          TNS_ADMIN: ${{ github.workspace }}/wallet
        run: mvn exec:java
